<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" InitialTargets="Configure" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
    <UsingTask TaskName="Microsoft.Build.Tasks.ResolveAssemblyReference" AssemblyName="Microsoft.Build.Tasks.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Condition="'$(MSBuildAssemblyVersion)' == ''" />

	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
		<IntermediateOutput>.nuget\</IntermediateOutput>
		<IntermediateOutputPath>.nuget\</IntermediateOutputPath>
		<PackagesPath>$(IntermediateOutput)packages</PackagesPath>
		<DropPath>out</DropPath>
		<GitInfoReportImportance>high</GitInfoReportImportance>
		<SolutionFileName>build.proj</SolutionFileName>
	</PropertyGroup>

	<Target Name="Clean">
		<Exec Command="rmdir $(DropPath) /S /Q" ContinueOnError="true" />
	</Target>

	<Target Name="Rebuild" DependsOnTargets="Clean;Build" />
	
	<Target Name="Build">
		<MSBuild Projects="Rewriter\Rewriter.sln" Properties="Configuration=$(Configuration)" />
		<Exec Command='Rewriter\bin\Rewriter $(PackagesPath)\SmallBasic\lib\net45\SmallBasicLibrary.dll $(DropPath)\SmallBasicLibrary.dll' />
		<Copy SourceFiles="$(PackagesPath)\SmallBasic\lib\net45\SmallBasicLibrary.xml" DestinationFolder="$(DropPath)" />
		<Exec Command='$(NuGet) Pack SmallBasic.Workbook.nuspec -Version $(Version) -OutputDirectory $(DropPath)' />
	</Target>

	<Target Name="Publish" DependsOnTargets="Package">
		<Exec Command='$(NuGet) Push "$(DropPath)\SmallBasic.Workbook.$(Version).nupkg" $(NuGetPushArgs)'
						StandardErrorImportance="high"
						StandardOutputImportance="normal" />

		<Message Text="Published new package version $(Version)"
				 Importance="high" />
	</Target>

	<!-- Configure and restore initial targets and packages -->
	<Import Project="Rewriter\NuGet.Restore.targets" />
	<PropertyGroup>
		<GitInfoTargets>$(PackagesPath)\GitInfo\build\GitInfo.targets</GitInfoTargets>
		<PendingRestore Condition=" !Exists('$(GitInfoTargets)') ">true</PendingRestore>
	</PropertyGroup>

	<Target Name="GitVersion" />
	<!-- Gets overriden by the $(GitInfoTargets) if it exists -->
	<Import Project="$(GitInfoTargets)" Condition=" Exists('$(GitInfoTargets)') " />

	<Target Name="Configure" DependsOnTargets="_GetNuGet;GitInfoReport">
		<!-- We always run NuGet Install since it already checks for already-installed packages and skips them -->
		<Exec Command='"$(NuGet)" Install "$(MSBuildThisFileDirectory)packages.config" -OutputDirectory "$(PackagesPath)" -ExcludeVersion' />

		<!-- Errors if nuget packages were restored during the build -->
		<Error Text="Required build-time NuGet packages were missing and were just restored. Please run the build again."
			   Condition=" '$(PendingRestore)' == 'true' And '$(target)' != 'configure' "/>

		<PropertyGroup>
			<Version>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)$(GitSemVerDashLabel)</Version>
		</PropertyGroup>

		<!-- Update AppVeyor build # to match the actual one being used -->
		<Exec Command="appveyor UpdateBuild -Version $(Version)" Condition=" '$(APPVEYOR)' == 'true' "
              ConsoleToMSBuild="true"
              ContinueOnError="WarnAndContinue" />

		<MakeDir Directories="$(DropPath)" Condition=" !Exists('$(DropPath)') " />
	</Target>
</Project>
